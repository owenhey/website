_title_: Prototypes
_description_: A live blog post about my process of prototyping four different games
_date_: 7/17/2025
_thumbnail_: charchase
_url_: prototypes
-------------------------------
[subtitle] July 12th

[paragraph] Over the months of July and August, I am setting myself the goal of making four game prototypes. I've 
been looking for a big and exciting personal project to be working on for a while, but I want to make sure
that whatever idea I go forward with actually has some ground to stand on. Small prototypes, all finished in less
than a week to ensure the scope stays small, feels like a great way to do this. I can test out different ideas,
playtest with my friends, and hopefully come away with an idea for a game that has a very fun core game loop.

[paragraph] Because I was feeling excited about the prospect of this, I decided to map out the rough idea of each
game first. I spent a couple hours brainstorming various (intentionally very different) ideas, and come up with these
four:

[dotlist]
A social deduction word game, where you have a "secret" word that you are trying to get others not to guess.
A tower defense game set on a planet, where you can terraform the earth to change how the attacker's paths.
A Balatro / Papers Please inspired game set in a dating app.
A game where you're a spider weaving your web, and you can see what is "coming" next like in Tetris.

[paragraph] The one I'm probably the most excited about is the dating app one, but I decided to start
with the word game.

[subtitle] July 17th

[title] The Word Game

[paragraph] The basic idea is that you and your teammate share a category of words, but don't know each other's specific
word. You are trying to get the other person to guess your word, but without the other team finding out. It's
sort of inspired by Two Rooms and a Boom, where you're trying to give up [i]some[i] information, but not all of it.

[paragraph] Retrospectively, this is a game I should've prototyped in-person with flash cards or something, setting
up the Flask backend was way more work than it was worse. But I set up a simple python app to handle the networking
between clients, and then a front-end in Unity that shows players their team, secret words, and answers.